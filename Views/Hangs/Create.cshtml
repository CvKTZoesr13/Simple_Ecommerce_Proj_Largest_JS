@model Simple_Ecommerce_Proj.Models.Hang

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Hangs", FormMethod.Post, new
{
    @enctype = "multipart/form-data"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Hang</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaHang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaHang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaHang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaNCC, "MaNCC", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaNCC", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaNCC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenHang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenHang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenHang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LuongCo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LuongCo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LuongCo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChietKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChietKhau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChietKhau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })*@
                <img onclick="uploadFile(event)" id="outputImage" class="img-rounded" alt="Image" width="540" height="360" style="object-fit:cover; cursor:pointer;" src="~/wwwroot/Images/no_image.jpg" />
                <p><label for="ufile" style="cursor:pointer;">Chọn file ảnh</label></p>
                <input name="ImageFile" id="ufile" type="file" class="input-group" onchange="loadFile(event)" style="display:none;" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        const image = document.getElementById("outputImage");
        $('#ufile').change(function () {
            var img = new Image;
            var u = URL.createObjectURL(this.files[0]);
            img.src = u;
            img.onload = function () {
                console.log("Width: " + img.width + "\n" + "Height: " + img.height)
                var newWidth; var newHeight;
                do {
                    newWidth = img.width / 2;
                    newHeight = img.height / 2;
                    img.width = newWidth;
                    img.height = newHeight;
                    console.log("Width: " + img.width + "\n" + "Height: " + img.height)
                } while (img.width > 1080 && img.height > 720)                  
                image.setAttribute("style", `width:${newWidth}px; height:${newHeight}px`)  
                console.log("input is changed")
            }
        })
        const loadFile = (event) => {
            console.log($("#ufile"))
            console.log(image)
            image.src = URL.createObjectURL(event.target.files[0]);
        }
        const uploadFile = (event) => {
            const ufile = document.getElementById("ufile");
            ufile.click();
        }
    </script>
}


